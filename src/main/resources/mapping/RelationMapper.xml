<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zust.dao.RelationMapper">
  <resultMap id="BaseResultMap" type="zust.model.Relation">
    <id column="relation_id" jdbcType="INTEGER" property="relationId" />
    <result column="relation_user_id" jdbcType="INTEGER" property="relationUserId" />
    <result column="related_user_id" jdbcType="INTEGER" property="relatedUserId" />
    <result column="relation_type" jdbcType="INTEGER" property="relationType" />
  </resultMap>
  <sql id="Base_Column_List">
    relation_id, relation_user_id, related_user_id, relation_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from relation
    where relation_id = #{relationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from relation
    where relation_id = #{relationId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByUserIdAndFollowerId">
    delete from relation
    where related_user_id = #{arg0,jdbcType=INTEGER} AND relation_user_id = #{arg1, jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zust.model.Relation">
    insert into relation (relation_id, relation_user_id, related_user_id, 
      relation_type)
    values (#{relationId,jdbcType=INTEGER}, #{relationUserId,jdbcType=INTEGER}, #{relatedUserId,jdbcType=INTEGER}, 
      #{relationType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="zust.model.Relation">
    insert into relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relationId != null">
        relation_id,
      </if>
      <if test="relationUserId != null">
        relation_user_id,
      </if>
      <if test="relatedUserId != null">
        related_user_id,
      </if>
      <if test="relationType != null">
        relation_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relationId != null">
        #{relationId,jdbcType=INTEGER},
      </if>
      <if test="relationUserId != null">
        #{relationUserId,jdbcType=INTEGER},
      </if>
      <if test="relatedUserId != null">
        #{relatedUserId,jdbcType=INTEGER},
      </if>
      <if test="relationType != null">
        #{relationType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zust.model.Relation">
    update relation
    <set>
      <if test="relationUserId != null">
        relation_user_id = #{relationUserId,jdbcType=INTEGER},
      </if>
      <if test="relatedUserId != null">
        related_user_id = #{relatedUserId,jdbcType=INTEGER},
      </if>
      <if test="relationType != null">
        relation_type = #{relationType,jdbcType=INTEGER},
      </if>
    </set>
    where relation_id = #{relationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zust.model.Relation">
    update relation
    set relation_user_id = #{relationUserId,jdbcType=INTEGER},
      related_user_id = #{relatedUserId,jdbcType=INTEGER},
      relation_type = #{relationType,jdbcType=INTEGER}
    where relation_id = #{relationId,jdbcType=INTEGER}
  </update>
</mapper>