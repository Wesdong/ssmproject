<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zust.dao.SChickenMapper">
  <resultMap id="BaseResultMap" type="zust.model.SChicken">
    <id column="sc_id" jdbcType="INTEGER" property="scId" />
    <result column="sc_user_id" jdbcType="INTEGER" property="scUserId" />
    <result column="sc_info" jdbcType="VARCHAR" property="scInfo" />
    <result column="sc_date" jdbcType="DATE" property="scDate" />
    <result column="sc_like" jdbcType="INTEGER" property="scLike" />
    <result column="sc_comments" jdbcType="INTEGER" property="scComments" />
    <result column="sc_ifcomments" jdbcType="TINYINT" property="scIfcomments" />
    <result column="sc_picture_id" jdbcType="INTEGER" property="scPictureId" />
    <association property="picture" javaType="zust.model.Picture">
      <id column="picture_id" jdbcType="INTEGER" property="pictureId" />
      <result column="picture_user_id" jdbcType="INTEGER" property="pictureUserId" />
      <result column="picture_url" jdbcType="VARCHAR" property="pictureUrl" />
    </association>
    <association property="user" javaType="zust.model.User">
      <id column="user_id" jdbcType="INTEGER" property="userId" />
      <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
      <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
      <result column="user_name" jdbcType="VARCHAR" property="userName" />
      <result column="user_gender" jdbcType="VARCHAR" property="userGender" />
      <result column="user_realname" jdbcType="VARCHAR" property="userRealname" />
      <association property="userinfo" javaType="zust.model.Userinfo">
        <id property="userinfoId" column="userinfo_id"/>
        <result property="userinfoPicurl" column="userinfo_picurl"/>
        <result property="userinfoVip" column="userinfo_vip"/>
        <result property="userinfoStatement" column="userinfo_statement"/>
        <result property="userinfoBirth" column="userinfo_birth"/>
      </association>
      <collection property="scList" ofType="zust.model.SChicken">
        <id column="sc_id" jdbcType="INTEGER" property="scId" />
        <result column="sc_user_id" jdbcType="INTEGER" property="scUserId" />
        <result column="sc_info" jdbcType="VARCHAR" property="scInfo" />
        <result column="sc_date" jdbcType="DATE" property="scDate" />
        <result column="sc_like" jdbcType="INTEGER" property="scLike" />
        <result column="sc_comments" jdbcType="INTEGER" property="scComments" />
        <result column="sc_ifcomments" jdbcType="TINYINT" property="scIfcomments" />
        <result column="sc_picture_id" jdbcType="INTEGER" property="scPictureId" />
        <association property="picture" javaType="zust.model.Picture">
          <id column="picture_id" property="pictureId"/>
          <result property="pictureUrl" column="picture_url"/>
        </association>
        <association property="user" javaType="zust.model.User">
          <id column="user_id" property="userId"/>
          <result column="user_account" property="userAccount"/>
          <result column="user_realname" property="userRealname"/>
        </association>
        <association property="userinfo" javaType="zust.model.Userinfo">
          <id property="userinfoId" column="userinfo_id"/>
          <result property="userinfoPicurl" column="userinfo_picurl"/>
          <result property="userinfoVip" column="userinfo_vip"/>
          <result property="userinfoStatement" column="userinfo_statement"/>
          <result property="userinfoBirth" column="userinfo_birth"/>
        </association>
      </collection>
      <collection property="relationList" ofType="zust.model.Relation">
        <id column="relation_id" jdbcType="INTEGER" property="relationId" />
        <result column="relation_user_id" jdbcType="INTEGER" property="relationUserId" />
        <result column="related_user_id" jdbcType="INTEGER" property="relatedUserId" />
        <result column="relation_type" jdbcType="INTEGER" property="relationType" />
      </collection>
    </association>
    <association property="userinfo" javaType="zust.model.Userinfo">
      <id column="userinfo_id" jdbcType="INTEGER" property="userinfoId" />
      <result column="userinfo_picurl" jdbcType="VARCHAR" property="userinfoPicurl" />
      <result column="userinfo_vip" jdbcType="TINYINT" property="userinfoVip" />
      <result column="userinfo_statement" jdbcType="VARCHAR" property="userinfoStatement" />
      <result column="userinfo_birth" jdbcType="TIMESTAMP" property="userinfoBirth" />
    </association>
    <collection property="commentsList" ofType="zust.model.Comments">
      <id column="comments_id" jdbcType="INTEGER" property="commentsId" />
      <result column="comments_user_id" jdbcType="INTEGER" property="commentsUserId" />
      <result column="comments_sc_id" jdbcType="INTEGER" property="commentsScId" />
      <result column="comments_info" jdbcType="VARCHAR" property="commentsInfo" />
      <result column="comments_date" jdbcType="TIMESTAMP" property="commentsDate" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    sc_id, sc_user_id, sc_info, sc_date, sc_like, sc_comments, sc_ifcomments, sc_picture_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sc
    where sc_id = #{scId,jdbcType=INTEGER}
  </select>
  <select id="selectByTime" parameterType="zust.model.SChicken" resultMap="BaseResultMap">
    select
    sc_id, sc_user_id, sc_info, sc_date, sc_like, sc_comments, sc_ifcomments, sc_picture_id, picture.picture_url
    from sc,picture WHERE sc.sc_picture_id = picture.picture_id
    ORDER BY sc_date DESC
  </select>
  <select id="selectFollowsSCByUserId" parameterType="zust.model.SChicken" resultMap="BaseResultMap">
    SELECT
    `user`.user_id,
    `user`.user_account,
    `user`.user_password,
    `user`.user_name,
    `user`.user_gender,
    `user`.user_realname,
    sc.sc_user_id,
    sc.sc_info,
    sc.sc_date,
    sc.sc_like,
    sc.sc_comments,
    sc.sc_ifcomments,
    sc.sc_id,
    sc.sc_picture_id,
    userinfo.userinfo_id,
    userinfo.userinfo_picurl,
    userinfo.userinfo_vip,
    userinfo.userinfo_statement,
    userinfo.userinfo_birth,
    picture.picture_user_id,
    picture.picture_id,
    picture.picture_url,
    comments.comments_id,
    comments.comments_user_id,
    comments.comments_sc_id,
    comments.comments_info,
    comments.comments_date
    FROM
    `user`
    LEFT JOIN sc ON sc.sc_user_id = `user`.user_id
    LEFT JOIN userinfo ON userinfo.userinfo_id = `user`.user_id
    LEFT JOIN picture ON picture.picture_user_id = `user`.user_id AND picture.picture_id = sc.sc_picture_id
    LEFT JOIN comments ON comments.comments_sc_id = sc.sc_id
    WHERE
    `user`.user_id = #{userId,jdbcType=INTEGER} OR
    (`user`.user_id IN (( SELECT DISTINCT relation.relation_user_id FROM USER, relation WHERE relation.related_user_id = #{userId,jdbcType=INTEGER})))
    ORDER BY
    sc.sc_date DESC
  </select>
  <select id="selectByUserID" parameterType="zust.model.SChicken" resultMap="BaseResultMap">
    select
    sc_id, sc_user_id, sc_info, sc_date, sc_like, sc_comments, sc_ifcomments, sc_picture_id, picture.picture_url
    from sc,picture,user WHERE sc.sc_picture_id = picture.picture_id AND sc.sc_user_id = user.user_id
    ORDER BY sc_date DESC
  </select>
  <select id="selectByInfo" parameterType="zust.model.SChicken" resultMap="BaseResultMap">
    SELECT
        sc.sc_user_id,
        sc.sc_info,
        sc.sc_date,
        sc.sc_like,
        sc.sc_comments,
        sc.sc_ifcomments,
        sc.sc_id,
        sc.sc_picture_id,
        `user`.user_id,
        `user`.user_account,
        `user`.user_password,
        `user`.user_name,
        `user`.user_gender,
        `user`.user_realname,
        comments.comments_id,
        comments.comments_user_id,
        comments.comments_sc_id,
        comments.comments_info,
        comments.comments_date,
        userinfo.userinfo_id,
        userinfo.userinfo_picurl,
        userinfo.userinfo_vip,
        userinfo.userinfo_statement,
        userinfo.userinfo_birth,
        picture.picture_user_id,
        picture.picture_id,
        picture.picture_url
    FROM
        sc
        LEFT JOIN `user` ON sc.sc_user_id = `user`.user_id
        LEFT JOIN userinfo ON userinfo.userinfo_id = `user`.user_id
        LEFT JOIN picture ON picture.picture_user_id = `user`.user_id
        AND sc.sc_picture_id = picture.picture_id
        LEFT JOIN comments ON comments.comments_sc_id = sc.sc_id
        AND comments.comments_user_id = `user`.user_id
    WHERE
        sc.sc_info LIKE #{searchinfo}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc
    where sc_id = #{scId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zust.model.SChicken">
    insert into sc (sc_id, sc_user_id, sc_info, 
      sc_date, sc_like, sc_comments, 
      sc_ifcomments, sc_picture_id)
    values (#{scId,jdbcType=INTEGER}, #{scUserId,jdbcType=INTEGER}, #{scInfo,jdbcType=VARCHAR}, 
      #{scDate,jdbcType=DATE}, #{scLike,jdbcType=INTEGER}, #{scComments,jdbcType=INTEGER}, 
      #{scIfcomments,jdbcType=TINYINT}, #{scPictureId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="zust.model.SChicken">
    insert into sc
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scId != null">
        sc_id,
      </if>
      <if test="scUserId != null">
        sc_user_id,
      </if>
      <if test="scInfo != null">
        sc_info,
      </if>
      <if test="scDate != null">
        sc_date,
      </if>
      <if test="scLike != null">
        sc_like,
      </if>
      <if test="scComments != null">
        sc_comments,
      </if>
      <if test="scIfcomments != null">
        sc_ifcomments,
      </if>
      <if test="scPictureId != null">
        sc_picture_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scId != null">
        #{scId,jdbcType=INTEGER},
      </if>
      <if test="scUserId != null">
        #{scUserId,jdbcType=INTEGER},
      </if>
      <if test="scInfo != null">
        #{scInfo,jdbcType=VARCHAR},
      </if>
      <if test="scDate != null">
        #{scDate,jdbcType=DATE},
      </if>
      <if test="scLike != null">
        #{scLike,jdbcType=INTEGER},
      </if>
      <if test="scComments != null">
        #{scComments,jdbcType=INTEGER},
      </if>
      <if test="scIfcomments != null">
        #{scIfcomments,jdbcType=TINYINT},
      </if>
      <if test="scPictureId != null">
        #{scPictureId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zust.model.SChicken">
    update sc
    <set>
      <if test="scUserId != null">
        sc_user_id = #{scUserId,jdbcType=INTEGER},
      </if>
      <if test="scInfo != null">
        sc_info = #{scInfo,jdbcType=VARCHAR},
      </if>
      <if test="scDate != null">
        sc_date = #{scDate,jdbcType=DATE},
      </if>
      <if test="scLike != null">
        sc_like = #{scLike,jdbcType=INTEGER},
      </if>
      <if test="scComments != null">
        sc_comments = #{scComments,jdbcType=INTEGER},
      </if>
      <if test="scIfcomments != null">
        sc_ifcomments = #{scIfcomments,jdbcType=TINYINT},
      </if>
      <if test="scPictureId != null">
        sc_picture_id = #{scPictureId,jdbcType=INTEGER},
      </if>
    </set>
    where sc_id = #{scId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zust.model.SChicken">
    update sc
    set sc_user_id = #{scUserId,jdbcType=INTEGER},
      sc_info = #{scInfo,jdbcType=VARCHAR},
      sc_date = #{scDate,jdbcType=DATE},
      sc_like = #{scLike,jdbcType=INTEGER},
      sc_comments = #{scComments,jdbcType=INTEGER},
      sc_ifcomments = #{scIfcomments,jdbcType=TINYINT},
      sc_picture_id = #{scPictureId,jdbcType=INTEGER}
    where sc_id = #{scId,jdbcType=INTEGER}
  </update>
</mapper>