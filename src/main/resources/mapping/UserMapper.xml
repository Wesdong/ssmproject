<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zust.dao.UserMapper">
  <resultMap id="BaseResultMap" type="zust.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_gender" jdbcType="VARCHAR" property="userGender" />
    <result column="user_realname" jdbcType="VARCHAR" property="userRealname" />
    <association property="userinfo" javaType="zust.model.Userinfo">
      <id property="userinfoId" column="userinfo_id"/>
      <result property="userinfoPicurl" column="userinfo_picurl"/>
      <result property="userinfoVip" column="userinfo_vip"/>
      <result property="userinfoStatement" column="userinfo_statement"/>
      <result property="userinfoBirth" column="userinfo_birth"/>
    </association>
    <collection property="scList" ofType="zust.model.SChicken">
      <id column="sc_id" jdbcType="INTEGER" property="scId" />
      <result column="sc_user_id" jdbcType="INTEGER" property="scUserId" />
      <result column="sc_info" jdbcType="VARCHAR" property="scInfo" />
      <result column="sc_date" jdbcType="DATE" property="scDate" />
      <result column="sc_like" jdbcType="INTEGER" property="scLike" />
      <result column="sc_comments" jdbcType="INTEGER" property="scComments" />
      <result column="sc_ifcomments" jdbcType="TINYINT" property="scIfcomments" />
      <result column="sc_picture_id" jdbcType="INTEGER" property="scPictureId" />
      <association property="picture" javaType="zust.model.Picture">
        <id column="picture_id" property="pictureId"/>
        <result property="pictureUrl" column="picture_url"/>
      </association>
      <association property="user" javaType="zust.model.User">
        <id column="user_id" property="userId"/>
        <result column="user_account" property="userAccount"/>
        <result column="user_realname" property="userRealname"/>
      </association>
      <association property="userinfo" javaType="zust.model.Userinfo">
        <id property="userinfoId" column="userinfo_id"/>
        <result property="userinfoPicurl" column="userinfo_picurl"/>
        <result property="userinfoVip" column="userinfo_vip"/>
        <result property="userinfoStatement" column="userinfo_statement"/>
        <result property="userinfoBirth" column="userinfo_birth"/>
      </association>
    </collection>
    <collection property="relationList" ofType="zust.model.Relation">
      <id column="relation_id" jdbcType="INTEGER" property="relationId" />
      <result column="relation_user_id" jdbcType="INTEGER" property="relationUserId" />
      <result column="related_user_id" jdbcType="INTEGER" property="relatedUserId" />
      <result column="relation_type" jdbcType="INTEGER" property="relationType" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_account, user_password, user_name, user_gender, user_realname
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectFollows" parameterType="java.lang.Integer" resultType="Integer">
    select
    count(*)
    from user,relation
    where user_id = #{userId,jdbcType=INTEGER} AND user.user_id = relation.related_user_id
  </select>
  <select id="selectFans" parameterType="java.lang.Integer" resultType="Integer">
    select
    count(*)
    from user,relation
    where user_id = #{userId,jdbcType=INTEGER} AND user.user_id = relation.relation_user_id
  </select>
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    user_id, user_account, user_password, user_name, user_gender, user_realname, userinfo.*,sc.*,picture.*
    from user,userinfo,sc,picture
    where user_account = #{userName,jdbcType=VARCHAR} AND user_id = userinfo.userinfo_id AND sc.sc_user_id = user.user_id
    AND sc.sc_picture_id = picture.picture_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zust.model.User">
    insert into user (user_id, user_account, user_password, 
      user_name, user_gender, user_realname
      )
    values (#{userId,jdbcType=INTEGER}, #{userAccount,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{userGender,jdbcType=VARCHAR}, #{userRealname,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="zust.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userAccount != null">
        user_account,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
      <if test="userRealname != null">
        user_realname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=VARCHAR},
      </if>
      <if test="userRealname != null">
        #{userRealname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zust.model.User">
    update user
    <set>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=VARCHAR},
      </if>
      <if test="userRealname != null">
        user_realname = #{userRealname,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zust.model.User">
    update user
    set user_account = #{userAccount,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_gender = #{userGender,jdbcType=VARCHAR},
      user_realname = #{userRealname,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>